name: Test

on:
  push:
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        tarantool: ['2.11', '3.3']

    runs-on: [ubuntu-24.04]
    steps:
      - uses: actions/checkout@v4

      - uses: tarantool/setup-tarantool@v3
        with:
          tarantool-version: ${{ matrix.tarantool }}

      - name: Prepare apt repo
        run: curl -L https://tarantool.io/release/3/installer.sh | bash

      - name: Install tt cli
        run: sudo apt install -y tt
        env:
          DEBIAN_FRONTEND: noninteractive

      # Setup luatest and luacheck
      - name: Cache rocks
        uses: actions/cache@v4
        id: cache-rocks
        with:
          path: .rocks/
          key: cache-rocks-${{ matrix.runs-on }}-07

      - name: Install test dependencies
        run: ./deps.sh
        if: steps.cache-rocks.outputs.cache-hit != 'true'
      
      - run: echo $PWD/.rocks/bin >> $GITHUB_PATH

      - run: tt rocks list
      - run: tt rocks install cartridge
        env:
          CMAKE_DUMMY_WEBUI: true
      - run: tt rocks remove ddl --force

      - run: tt rocks make
      - run: cmake -S . -B build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run luacheck
        run: make -C build luacheck

      - name: Run tests and code coverage analysis
        run: make -C build coverage
        if: ${{ startsWith(matrix.tarantool, '2.') }}

      - name: Send code coverage to coveralls.io
        run: make -C build coveralls
        if: ${{ startsWith(matrix.tarantool, '2.') }}

      # Cleanup cached paths
      - run: tt rocks remove cartridge
      - run: tt rocks remove ddl
  benchmark:
    strategy:
      fail-fast: false
      matrix:
        tarantool: ['2.11', '3.3']

    runs-on: [ubuntu-24.04]
    steps:
      - uses: actions/checkout@v4

      - uses: tarantool/setup-tarantool@v3
        with:
          tarantool-version: ${{ matrix.tarantool }}

      - name: Prepare apt repo
        run: curl -L https://tarantool.io/release/3/installer.sh | bash

      - name: Install tt cli
        run: sudo apt install -y tt
        env:
          DEBIAN_FRONTEND: noninteractive

      # Setup luatest
      - name: Cache rocks
        uses: actions/cache@v4
        id: cache-rocks
        with:
          path: .rocks/
          key: cache-rocks-${{ matrix.runs-on }}-bench-01

      - run: tt rocks install luatest
        if: steps.cache-rocks.outputs.cache-hit != 'true'

      - run: tarantool ./test/bench_cache.lua
