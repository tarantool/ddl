name: Test

on:
  push:
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        tarantool: ['1.10', '2.5', '2.6', '2.7']
        coveralls: [false]
        include:
          - tarantool: '2.8'
            coveralls: true
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: tarantool/setup-tarantool@v1
        with:
          tarantool-version: ${{ matrix.tarantool }}

      # Setup luatest and luacheck
      - name: Cache rocks
        uses: actions/cache@v2
        id: cache-rocks
        with:
          path: .rocks/
          key: cache-rocks-${{ matrix.runs-on }}-06
      -
        run: tarantoolctl rocks install luacheck
        if: steps.cache-rocks.outputs.cache-hit != 'true'
      -
        run: tarantoolctl rocks install luatest
        if: steps.cache-rocks.outputs.cache-hit != 'true'
      -
        run: tarantoolctl rocks install luacov
        if: steps.cache-rocks.outputs.cache-hit != 'true'
      -
        run: tarantoolctl rocks install luacov-coveralls 0.2.3-1 --server=https://luarocks.org
        if: steps.cache-rocks.outputs.cache-hit != 'true'
      - run: echo $PWD/.rocks/bin >> $GITHUB_PATH

      - run: tarantoolctl rocks list
      - run: tarantoolctl rocks install cartridge
        env:
          CMAKE_DUMMY_WEBUI: true
      - run: tarantoolctl rocks remove ddl --force

      - run: tarantoolctl rocks make
      - run: cmake -S . -B build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run luacheck
        run: make -C build luacheck

      - name: Run tests and code coverage analysis
        run: make -C build coverage

      - name: Send code coverage to coveralls.io
        run: make -C build coveralls
        if: ${{ matrix.coveralls }}

      # Cleanup cached paths
      - run: tarantoolctl rocks remove cartridge
      - run: tarantoolctl rocks remove ddl
